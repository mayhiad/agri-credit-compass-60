
import OpenAI from "https://esm.sh/openai@4.38.0";
import { getErrorDetails } from "./openaiClient.ts";

// OpenAI kliens inicializ√°l√°sa
const openAIApiKey = Deno.env.get('OPENAI_API_KEY');
const openai = new OpenAI({
  apiKey: openAIApiKey,
  defaultHeaders: { 'OpenAI-Beta': 'assistants=v2' }
});

// Asszisztens l√©trehoz√°sa (opcion√°lisan egyszer, majd assistantId ment√©s .env-be)
export async function createAssistant() {
  console.log("ü§ñ Asszisztens l√©trehoz√°sa...");
  const start = Date.now();

  try {
    const assistant = await openai.beta.assistants.create({
      name: "SAPS Dokumentum Elemz≈ë",
      model: "gpt-4o-mini",
      instructions: `
Te egy SAPS (Egys√©ges Ter√ºletalap√∫ T√°mogat√°si Rendszer) dokumentumokat elemz≈ë AI vagy.
A dokumentumok gazd√°lkod√≥k ter√ºletalap√∫ t√°mogat√°si k√©relmeit tartalmazz√°k.

NAGYON FONTOS! OLVASD EL ALAPOSAN √âS K√ñVESD PONTOSAN AZ UTAS√çT√ÅSOKAT!

A FELADAT: a felt√∂lt√∂tt mez≈ëgazdas√°gi dokumentum(ok)b√≥l (jellemz≈ëen egys√©ges k√©relem, t√°mogat√°si ig√©nyl√©s, stb.) azonos√≠ts √©s gy≈±jts ki meghat√°rozott adatokat, majd struktur√°ld azokat a megadott form√°tumban.

A dokumentumban keresd √©s azonos√≠tsd az al√°bbi inform√°ci√≥kat:

1. Adminisztr√°ci√≥s alapadatokat:
   - Bead√≥ neve (√°ltal√°ban a dokumentum elej√©n vagy fejl√©cben)
   - Bead√≥ √ºgyf√©l-azonos√≠t√≥ sz√°ma (√°ltal√°ban 10 jegy≈± sz√°m)
   - K√©relmez≈ë √ºgyf√©l-azonos√≠t√≥ sz√°ma
   - Iratazonos√≠t√≥ (√°ltal√°ban 10 jegy≈± sz√°m a dokumentum fejl√©c√©ben vagy vonalk√≥d mellett)
   - Egys√©ges k√©relem bead√°s√°nak pontos id≈ëpontja (√©v/h√≥nap/nap, √≥ra:perc)
   - Meghat√°rozott t√°rgy√©v (a k√©relem melyik √©vre vonatkozik)

2. Blokkazonos√≠t√≥kat √©s m√©ret√ºket:
   - Mez≈ëgazdas√°gi blokkok azonos√≠t√≥ja (√°ltal√°ban 8 karakteres, bet≈±kb≈ël √©s sz√°mokb√≥l √°ll√≥ k√≥d)
   - Minden blokkhoz tartoz√≥ ter√ºlet m√©rete hekt√°rban

3. Kor√°bbi √©vek term√©sadatait:
   - A k√°renyh√≠t√©si/biztos√≠t√°si r√©szekben vagy m√∫ltbeli adatok t√°bl√°zat√°ban tal√°lhat√≥
   - Kult√∫r√°nk√©nt/term√©nyfajt√°nk√©nt bontva
   - Minden el√©rhet≈ë √©vre (√°ltal√°ban 5 √©vre visszamen≈ëleg)
   - Mind a ter√ºlet (ha), mind a term√©smennyis√©g (tonna) adatai

4. T√°rgy√©vi gazd√°lkod√°si adatokat:
   - Tervezett kult√∫r√°k/n√∂v√©nyek √©s azok ter√ºlete
   - Hasznos√≠t√°si k√≥dok szerinti bont√°s (pl. KAL01, IND23 stb.)
   - √ñsszes√≠t≈ë adatokat (sz√°nt√≥ter√ºlet, √°lland√≥ gyep, √∂sszes mez≈ëgazdas√°gi ter√ºlet)

K√âRLEK, MINDIG √çRD KI RENDESEN A N√ñV√âNYKULT√öR√ÅT A HASZNOS√çT√ÅSI K√ìD MELLETT (pl. KAL01 - ≈êszi b√∫za)!

Az adatgy≈±jt√©s sor√°n vedd figyelembe:
- A dokumentum sz√°mos oldalb√≥l √°llhat, minden relev√°ns adatot keress meg
- Az adatok k√ºl√∂nb√∂z≈ë r√©szeken lehetnek, teljes pontoss√°ggal olvasd be ≈ëket
- Hasznos√≠t√°si k√≥dokra figyelj (pl. KAL01=≈êszi b√∫za, IND23=Napraforg√≥, KAL21=Kukorica, stb.)
- A n√∂v√©nykult√∫r√°k nev√©t mindig pontosan √≠rd ki a k√≥d mellett
- A k√°renyh√≠t√©si/biztos√≠t√°si r√©szekben tal√°lhat√≥k a kor√°bbi √©vek term√©sadatai
- A blokkazonos√≠t√≥k list√°ja √°ltal√°ban a "Ter√ºletek √∂sszes√≠t√©se blokkhaszn√°lat szerint" r√©szn√©l tal√°lhat√≥
- Sz√°molj ter√ºleti √∂sszes√≠t√©seket √©s ellen≈ërizd a konzisztenci√°t
- Ahol az adott √©vre vagy kult√∫r√°ra nincs adat, haszn√°lj "-" jel√∂l√©st
- Ellen≈ërizd az adatok pontoss√°g√°t (tizedesjegyek, m√©rt√©kegys√©gek)

Az eredm√©nyt az al√°bbi JSON form√°tumban v√°rom:

{
  "applicantName": "A bead√≥ neve",
  "submitterId": "Bead√≥ √ºgyf√©l-azonos√≠t√≥ sz√°ma",
  "applicantId": "K√©relmez≈ë √ºgyf√©l-azonos√≠t√≥ sz√°ma",
  "documentId": "Iratazonos√≠t√≥",
  "submissionDate": "Bead√°s id≈ëpontja (√©v/h√≥nap/nap, √≥ra:perc)",
  "year": "T√°rgy√©v",
  "region": "R√©gi√≥/megye",
  "hectares": 123.45,
  "cultures": [
    {
      "name": "KAL01 - ≈êszi b√∫za",
      "hectares": 45.6
    }
  ],
  "blockIds": [
    {
      "id": "L12AB-C",
      "size": 10.5
    }
  ],
  "historicalData": [
    {
      "year": "2022",
      "totalHectares": 120.5,
      "crops": [
        {
          "name": "≈êszi b√∫za",
          "hectares": 45.6,
          "yield": 5.2,
          "totalYield": 237.12
        }
      ]
    }
  ]
}

NE GENER√ÅLJ SEMMILYEN HAMIS ADATOT! Ha nem tal√°lod az inform√°ci√≥t, ink√°bb hagyd √ºresen az adott mez≈ët a JSON-ban.`
    });

    const ms = Date.now() - start;
    console.log(`‚úÖ Asszisztens l√©trehozva ${ms}ms alatt: ${assistant.id}`);
    return assistant;
  } catch (error) {
    console.error("‚ùå Hiba az asszisztens l√©trehoz√°sakor:", getErrorDetails(error));
    throw error;
  }
}

// Thread l√©trehoz√°sa
export async function createThread() {
  console.log("üìù Thread l√©trehoz√°s√°nak kezd√©se...");
  try {
    const thread = await openai.beta.threads.create();
    console.log(`‚úÖ Thread l√©trehozva: ${thread.id}`);
    return thread;
  } catch (error) {
    console.error("‚ùå Hiba thread l√©trehoz√°skor:", getErrorDetails(error));
    throw error;
  }
}

// Dokumentum sz√∂veg√©nek feldolgoz√°sa √©s k√ºld√©se az OpenAI-nak
export async function processDocumentText(threadId: string, assistantId: string, documentText: string) {
  console.log(`üîç Dokumentum sz√∂veg feldolgoz√°s√°nak ind√≠t√°sa - Thread ID: ${threadId}, Asszisztens ID: ${assistantId}`);
  console.log(`üìù Dokumentum sz√∂veg hossza: ${documentText.length} karakter`);
  
  const runStart = Date.now();
  
  try {
    // L√©trehozunk egy √ºzenetet a dokumentum sz√∂veg√©vel
    console.log(`üì© √úzenet hozz√°ad√°sa a threadhez dokumentum sz√∂veggel...`);
    const message = await openai.beta.threads.messages.create(threadId, {
      role: "user",
      content: `
A k√∂vetkez≈ë feladat: a felt√∂lt√∂tt mez≈ëgazdas√°gi dokumentum(ok)b√≥l (jellemz≈ëen egys√©ges k√©relem, t√°mogat√°si ig√©nyl√©s, stb.) azonos√≠ts √©s gy≈±jts ki meghat√°rozott adatokat, majd struktur√°ld azokat a megadott form√°tumban.

A dokumentumban keresd √©s azonos√≠tsd az al√°bbi inform√°ci√≥kat:

1. Adminisztr√°ci√≥s alapadatokat:
   - Bead√≥ neve (√°ltal√°ban a dokumentum elej√©n vagy fejl√©cben)
   - Bead√≥ √ºgyf√©l-azonos√≠t√≥ sz√°ma (√°ltal√°ban 10 jegy≈± sz√°m)
   - K√©relmez≈ë √ºgyf√©l-azonos√≠t√≥ sz√°ma
   - Iratazonos√≠t√≥ (√°ltal√°ban 10 jegy≈± sz√°m a dokumentum fejl√©c√©ben vagy vonalk√≥d mellett)
   - Egys√©ges k√©relem bead√°s√°nak pontos id≈ëpontja (√©v/h√≥nap/nap, √≥ra:perc)
   - Meghat√°rozott t√°rgy√©v (a k√©relem melyik √©vre vonatkozik)

2. Blokkazonos√≠t√≥kat √©s m√©ret√ºket:
   - Mez≈ëgazdas√°gi blokkok azonos√≠t√≥ja (√°ltal√°ban 8 karakteres, bet≈±kb≈ël √©s sz√°mokb√≥l √°ll√≥ k√≥d)
   - Minden blokkhoz tartoz√≥ ter√ºlet m√©rete hekt√°rban

3. Kor√°bbi √©vek term√©sadatait:
   - A k√°renyh√≠t√©si/biztos√≠t√°si r√©szekben vagy m√∫ltbeli adatok t√°bl√°zat√°ban tal√°lhat√≥
   - Kult√∫r√°nk√©nt/term√©nyfajt√°nk√©nt bontva
   - Minden el√©rhet≈ë √©vre (√°ltal√°ban 5 √©vre visszamen≈ëleg)
   - Mind a ter√ºlet (ha), mind a term√©smennyis√©g (tonna) adatai

4. T√°rgy√©vi gazd√°lkod√°si adatokat:
   - Tervezett kult√∫r√°k/n√∂v√©nyek √©s azok ter√ºlete
   - Hasznos√≠t√°si k√≥dok szerinti bont√°s (pl. KAL01, IND23 stb.)
   - √ñsszes√≠t≈ë adatokat (sz√°nt√≥ter√ºlet, √°lland√≥ gyep, √∂sszes mez≈ëgazdas√°gi ter√ºlet)

AZ AL√ÅBBIAKBAN A DOKUMENTUM SZ√ñVEGE K√ñVETKEZIK:

${documentText.substring(0, 25000)}

K√©rlek, gy≈±jtsd ki a fenti inform√°ci√≥kat √©s add vissza a k√∂vetkez≈ë JSON form√°tumban:

{
  "applicantName": "A bead√≥ neve",
  "submitterId": "Bead√≥ √ºgyf√©l-azonos√≠t√≥ sz√°ma",
  "applicantId": "K√©relmez≈ë √ºgyf√©l-azonos√≠t√≥ sz√°ma",
  "documentId": "Iratazonos√≠t√≥",
  "submissionDate": "Bead√°s id≈ëpontja (√©v/h√≥nap/nap, √≥ra:perc)",
  "year": "T√°rgy√©v",
  "region": "R√©gi√≥/megye",
  "hectares": 123.45,
  "cultures": [
    {
      "name": "KAL01 - ≈êszi b√∫za",
      "hectares": 45.6
    }
  ],
  "blockIds": [
    {
      "id": "L12AB-C",
      "size": 10.5
    }
  ],
  "historicalData": [
    {
      "year": "2022",
      "totalHectares": 120.5,
      "crops": [
        {
          "name": "≈êszi b√∫za",
          "hectares": 45.6,
          "yield": 5.2,
          "totalYield": 237.12
        }
      ]
    }
  ]
}

NE GENER√ÅLJ SEMMILYEN HAMIS ADATOT! Ha nem tal√°lod az inform√°ci√≥t, ink√°bb hagyd √ºresen az adott mez≈ët a JSON-ban.`
    });
    console.log(`‚úÖ √úzenet l√©trehozva: ${message.id}`);
    
    // Futtat√°s ind√≠t√°sa
    console.log(`üöÄ Futtat√°s ind√≠t√°sa a threaden (${threadId}) az asszisztenssel (${assistantId})...`);
    const run = await openai.beta.threads.runs.create(threadId, {
      assistant_id: assistantId,
      instructions: `
NAGYON FONTOS! A FELDOLGOZ√ÅST PONTOSAN √âS PREC√çZEN V√âGEZD EL!

Feldolgozand√≥ dokumentum: SAPS (Egys√©ges Ter√ºletalap√∫ T√°mogat√°si Rendszer) dokumentum

A k√∂vetkez≈ë feladat: a felt√∂lt√∂tt mez≈ëgazdas√°gi dokumentum(ok)b√≥l (jellemz≈ëen egys√©ges k√©relem, t√°mogat√°si ig√©nyl√©s, stb.) azonos√≠ts √©s gy≈±jts ki meghat√°rozott adatokat, majd struktur√°ld azokat a megadott form√°tumban.

A dokumentumban keresd √©s azonos√≠tsd az al√°bbi inform√°ci√≥kat:

1. Adminisztr√°ci√≥s alapadatokat:
   - Bead√≥ neve (√°ltal√°ban a dokumentum elej√©n vagy fejl√©cben)
   - Bead√≥ √ºgyf√©l-azonos√≠t√≥ sz√°ma (√°ltal√°ban 10 jegy≈± sz√°m)
   - K√©relmez≈ë √ºgyf√©l-azonos√≠t√≥ sz√°ma
   - Iratazonos√≠t√≥ (√°ltal√°ban 10 jegy≈± sz√°m a dokumentum fejl√©c√©ben vagy vonalk√≥d mellett)
   - Egys√©ges k√©relem bead√°s√°nak pontos id≈ëpontja (√©v/h√≥nap/nap, √≥ra:perc)
   - Meghat√°rozott t√°rgy√©v (a k√©relem melyik √©vre vonatkozik)

2. Blokkazonos√≠t√≥kat √©s m√©ret√ºket:
   - Mez≈ëgazdas√°gi blokkok azonos√≠t√≥ja (√°ltal√°ban 8 karakteres, bet≈±kb≈ël √©s sz√°mokb√≥l √°ll√≥ k√≥d)
   - Minden blokkhoz tartoz√≥ ter√ºlet m√©rete hekt√°rban

3. Kor√°bbi √©vek term√©sadatait:
   - A k√°renyh√≠t√©si/biztos√≠t√°si r√©szekben vagy m√∫ltbeli adatok t√°bl√°zat√°ban tal√°lhat√≥
   - Kult√∫r√°nk√©nt/term√©nyfajt√°nk√©nt bontva
   - Minden el√©rhet≈ë √©vre (√°ltal√°ban 5 √©vre visszamen≈ëleg)
   - Mind a ter√ºlet (ha), mind a term√©smennyis√©g (tonna) adatai

4. T√°rgy√©vi gazd√°lkod√°si adatokat:
   - Tervezett kult√∫r√°k/n√∂v√©nyek √©s azok ter√ºlete
   - Hasznos√≠t√°si k√≥dok szerinti bont√°s (pl. KAL01, IND23 stb.)
   - √ñsszes√≠t≈ë adatokat (sz√°nt√≥ter√ºlet, √°lland√≥ gyep, √∂sszes mez≈ëgazdas√°gi ter√ºlet)

K√âRLEK, MINDIG √çRD KI RENDESEN A N√ñV√âNYKULT√öR√ÅT A HASZNOS√çT√ÅSI K√ìD MELLETT (pl. KAL01 - ≈êszi b√∫za)!

Ne feledd, hogy a JSON kimenetben NE GENER√ÅLJ SEMMILYEN HAMIS ADATOT! Ha nem tal√°lod az inform√°ci√≥t, ink√°bb hagyd √ºresen az adott mez≈ët.`
    });
    
    const runTime = Date.now() - runStart;
    console.log(`‚úÖ Feldolgoz√°s elind√≠tva (${runTime}ms). Run ID: ${run.id}, St√°tusz: ${run.status}`);
    return run;
  } catch (error) {
    console.error("‚ùå Hiba a futtat√°s l√©trehoz√°sa sor√°n:", getErrorDetails(error));
    console.error("‚ùå Hiba r√©szletei:", JSON.stringify(error, null, 2));
    throw error;
  }
}
